var YandexMap=function(t){var o=this,e=$.extend(!0,{language:{url:null,opacity:"Opacity",strokeWidth:"Stroke width",veryBold:"Very bold",bold:"Bold",normal:"Normal",slim:"Slim",verySlim:"Very slim","delete":"Delete",save:"Save",placemarkText:"Placemark text",color:"Color",baloonText:"Baloon text",searchOnMap:"Search on the map",search:"Search",notFound:"Not found",settingPoints:"Setting points",lineColor:"Line color",drawingLines:"Drawing lines",polygonColor:"Polygon color",drawingPolygons:"Drawing polygons",errorFound:"Error found",routeError:"The route is already on the map",layingRoutes:"Laying routes"}},t);this.maps={},this._mapTools=[],this._layouts={};var a=e.language;e.language.url&&$.ajax({dataType:"json",async:!1,url:e.language.url,success:function(t){$.extend(!0,a,t)}}),this.addMapTools=function(t){this._mapTools.push(t)},this.getMapTools=function(t){var o=[];for(var e in this._mapTools)"function"==typeof this._mapTools[e]?o.push(this._mapTools[e](t)):o.push(this._mapTools[e]);return o},this.addLayout=function(t,o){this._layouts[t]=o},this.initLayouts=function(){for(var t in this._layouts)ymaps.layout.storage.add(t,this._layouts[t])},this.colors={blue:"#006cff",lightblue:"#66c7ff",night:"#004056",darkblue:"#00339a",green:"#33cc00",white:"#ffffff",red:"#ff0000",orange:"#ffb400",darkorange:"#ff6600",yellow:"#ffea00",violet:"#b832fd",pink:"#fd32fb"},this.colorsHTML="";for(var i in this.colors)this.colorsHTML+='<div class="yamaps-color"><div data-content="'+i+'">'+this.colors[i]+"</div></div>";this.addLayout("yamaps#OpacityLayout",ymaps.templateLayoutFactory.createClass(['<label for="opacity">'+a.opacity+"</label>",'<select id="opacity">','<option value="1">100%</option>','<option value="0.9">90%</option>','<option value="0.8">80%</option>','<option value="0.7">70%</option>','<option value="0.6">60%</option>','<option value="0.5">50%</option>','<option value="0.4">40%</option>','<option value="0.3">30%</option>','<option value="0.2">20%</option>','<option value="0.1">10%</option>',"</select>"].join(""))),this.addLayout("yamaps#StrokeWidthLayout",ymaps.templateLayoutFactory.createClass(['<label for="strokeWidth">'+a.strokeWidth+"</label>",'<select id="strokeWidth">','<option value="7">'+a.veryBold+"</option>",'<option value="5">'+a.bold+"</option>",'<option value="3">'+a.normal+"</option>",'<option value="2">'+a.slim+"</option>",'<option value="1">'+a.verySlim+"</option>","</select>"].join(""))),this.addLayout("yamaps#ColorPicker",ymaps.templateLayoutFactory.createClass('<div class="yamaps-colors">'+this.colorsHTML+"</div>",{build:function(){this.constructor.superclass.build.call(this),this.$elements=$(this.getParentElement()).find(".yamaps-color"),this.$elements.each(function(){var t=$(this).children("div");t.css("background-color",t.text())}),this.$elements.bind("click",this,this.colorClick)},clear:function(){this.constructor.superclass.build.call(this),this.$elements.unbind("click",this,this.colorClick)},colorClick:function(t){t.data.$elements.removeClass("yamaps-color-active"),$(this).addClass("yamaps-color-active")}})),this.addLayout("yamaps#ActionsButtons",ymaps.templateLayoutFactory.createClass('<div class="actions"><a id="deleteButton" href="#">'+a["delete"]+'</a><input id="saveButton" type="button" value="'+a.save+'"/></div>')),this.BaseYamapsObject={startEditing:function(t){this.element.editor.startEditing(),t&&this.element.editor.state.set("drawing",!0),this.element.editor.events.add("statechange",function(t){this.element.editor.state.get("editing")&&!this.element.editor.state.get("drawing")&&this.openBalloon()},this)},setColor:function(t,e){this.element.options.set("strokeColor",o.colors[t]),"undefined"!=typeof e&&this.element.options.set("fillColor",o.colors[e])},setContent:function(t){this.element.properties.set("balloonContent",t)},setOpacity:function(t){this.element.options.set("opacity",t)},setWidth:function(t){this.element.options.set("strokeWidth",t)},openBalloon:function(){this.element.balloon.open()},closeBalloon:function(){this.element.balloon.close()},remove:function(){this.getParent().remove(this),this.exportParent()},setParent:function(t){this.parent=t},getParent:function(){return this.parent},Export:function(){var t=this.element.geometry.getCoordinates();if(!("object"!=typeof t[0]||t.length<1)){if("object"==typeof t[0][0]){if(t[0].length<3)return}else if(t.length<2)return;var o=this.element.properties.getAll(),e={coords:t,params:{strokeWidth:o.strokeWidth,strokeColor:o.strokeColor,balloonContent:o.balloonContent,opacity:o.opacity}};return"undefined"!=typeof o.fillColor&&(e.params.fillColor=o.fillColor),e}},exportParent:function(){var t=this.getParent();t&&t.exportToHTML()},_init:function(t){this.element=t,this.parent=null,this.element.events.add(["geometrychange","propertieschange"],this.exportParent,this),this.element.properties.set("element",this);var o=this.element.properties.getAll();this.setColor(o.strokeColor,o.fillColor),this.setOpacity(o.opacity),this.setWidth(o.strokeWidth)}},this.BaseYamapsObjectCollection={Export:function(){var t=[];return this.elements.each(function(o){var e=o.properties.get("element").Export();e&&t.push(e)}),t},exportToHTML:function(){var t=this.Export(),o=(this.elements.getMap().container.getElement().parentElement.id,$("input[name="+this.storagePrefix+"]"));o.val(JSON.stringify(t))},add:function(t){return t.setParent(this),this.elements.add(t.element),t},remove:function(t){this.elements.remove(t.element)},_init:function(t){this.elements=new ymaps.GeoObjectCollection,this.elements.options.set(t)}},this.YamapsPlacemark=function(t,o,e){this.placemark=new ymaps.Placemark(t,o,e),this.parent=null,this.setContent=function(t,o){this.placemark.properties.set("iconContent",t),this.placemark.properties.set("balloonContentHeader",t),this.placemark.properties.set("balloonContentBody",o)},this.setColor=function(t){var o="twirl#"+t;o+=this.placemark.properties.get("iconContent")?"StretchyIcon":"DotIcon",this.placemark.options.set("preset",o)},this.closeBalloon=function(){this.placemark.balloon.close()},this.openBalloon=function(){this.placemark.balloon.open()},this.remove=function(){this.getParent().remove(this),this.exportParent()},this.setParent=function(t){this.parent=t},this.getParent=function(){return this.parent},this.Export=function(){var t=this.placemark.geometry.getCoordinates(),o=this.placemark.properties.getAll();return{coords:t,params:{color:o.color,iconContent:o.iconContent,balloonContentBody:o.balloonContentBody,balloonContentHeader:o.iconContent}}},this.exportParent=function(){var t=this.getParent();if(t){var o=(t.elements.getMap().container.getElement().parentElement.id,t.Export()),e=$("input[name=yandex-map-placemarks]");e.val(JSON.stringify(o))}},this.placemark.events.add("dragend",this.exportParent,this).add("propertieschange",this.exportParent,this),this.placemark.properties.set("Placemark",this),this.setColor(o.color)},this.YamapsPlacemarkCollection=function(t){this.placemarks=[],this.elements=new ymaps.GeoObjectCollection,this.elements.options.set(t),this.add=function(t){return t.setParent(this),this.placemarks.push(t),this.elements.add(t.placemark),t},this.createPlacemark=function(t,e,a){return this.add(new o.YamapsPlacemark(t,e,a))},this.remove=function(t){this.elements.remove(t.placemark);for(var o in this.placemarks)if(this.placemarks[o]===t){this.placemarks.splice(o,1);break}},this.each=function(t){for(var o in this.placemarks)t(this.placemarks[o])},this.Export=function(){var t=[];return this.each(function(o){t.push(o.Export())}),t}},this.addLayout("yamaps#PlacemarkBalloonEditLayout",ymaps.templateLayoutFactory.createClass(['<div class="yamaps-balloon yamaps-placemark-edit">','<div class="form-element">','<label for="iconContent">'+a.placemarkText+"</label>",'<input type="text" id="iconContent" value="$[properties.iconContent]"/>',"</div>",'<div class="form-element placemark-colors">',"<label>"+a.color+"</label>","$[[yamaps#ColorPicker]]","</div>",'<div class="form-element">','<label for="balloonContent">'+a.baloonText+"</label>",'<input type="text" id="balloonContent" value="$[properties.balloonContentBody]"/>',"</div>","$[[yamaps#ActionsButtons]]","</div>"].join(""),{build:function(){this.constructor.superclass.build.call(this),this.properties=this.getData().properties.getAll();var t=$(this.getParentElement()),o=this;this.$placemarkColors=$(this.getParentElement()).find(".placemark-colors .yamaps-color"),this.$placemarkColors.each(function(){var t=$(this),e=t.children("div");o.properties.color==e.attr("data-content")&&t.addClass("yamaps-color-active")}),this.$placemarkColors.bind("click",this,this.colorClick),this.$iconContent=t.find("#iconContent"),this.$balloonContent=t.find("#balloonContent"),$("#deleteButton").bind("click",this,this.onDeleteClick),$("#saveButton").bind("click",this,this.onSaveClick)},clear:function(){this.constructor.superclass.build.call(this),this.$placemarkColors.unbind("click",this,this.colorClick),$("#deleteButton").unbind("click",this,this.onDeleteClick),$("#saveButton").unbind("click",this,this.onSaveClick)},colorClick:function(t){t.data.properties.color=$(this).children("div").attr("data-content")},onDeleteClick:function(t){t.data.properties.Placemark.remove(),t.preventDefault()},onSaveClick:function(t){var o=t.data.properties.Placemark;console.log(o),o.setContent(t.data.$iconContent.val(),t.data.$balloonContent.val()),o.setColor(t.data.properties.color),o.closeBalloon()}})),this.addMapTools(function(t){var e={balloonMaxWidth:300,balloonCloseButton:!0};t.options.edit&&(e.balloonContentLayout="yamaps#PlacemarkBalloonEditLayout",e.draggable=!0);var i=new o.YamapsPlacemarkCollection(e);for(var n in t.options.placemarks)i.add(new o.YamapsPlacemark(t.options.placemarks[n].coords,t.options.placemarks[n].params,t.options.placemarks[n].options));if(t.map.geoObjects.add(i.elements),t.options.edit){console.log(a.search);var s=$(['<form class="yamaps-search-form">','<input type="text" class="form-text" placeholder="'+a.searchOnMap+'" value=""/>','<input type="submit" class="form-submit" value="'+a.search+'"/>',"</form>"].join(""));s.bind("submit",function(e){var n=s.children("input").val();ymaps.geocode(n,{results:1},{results:100}).then(function(e){var n=e.geoObjects.get(0);if(!n)return void alert(a.notFound);var s=n.geometry.getCoordinates(),l=n.properties.getAll(),r=new o.YamapsPlacemark(s,{iconContent:l.name,balloonHeaderContent:l.name,balloonContentBody:l.description,color:"white"});i.add(r),r.openBalloon(),t.map.panTo(s,{checkZoomRange:!1,delay:0,duration:1e3,flying:!0})}),e.preventDefault()}),s.insertAfter("#"+t.mapId);var l=function(t){var o=i.createPlacemark(t.get("coordPosition"),{iconContent:"",color:"blue",balloonContentBody:"",balloonContentHeader:""});o.openBalloon()},r=new ymaps.control.Button({data:{content:'<ymaps class="ymaps-b-form-button__text"><ymaps class="ymaps-b-ico ymaps-b-ico_type_point"></ymaps></ymaps>',title:a.settingPoints}});return r.events.add("select",function(o){t.cursor=t.map.cursors.push("pointer"),t.mapListeners.add("click",l)}).add("deselect",function(o){t.cursor.remove(),t.mapListeners.remove("click",l)}),r}}),this.YamapsLine=function(t,o,e){this._init(new ymaps.Polyline(t,o,e))},this.YamapsLine.prototype=this.BaseYamapsObject,this.YamapsLineCollection=function(t){this._init(t),this.storagePrefix="yandex-map-lines",this.createLine=function(t,e,a){return this.add(new o.YamapsLine(t,e,a))}},this.YamapsLineCollection.prototype=this.BaseYamapsObjectCollection,this.addLayout("yamaps#LineBalloonEditLayout",ymaps.templateLayoutFactory.createClass(['<div class="yamaps-balloon yamaps-line-edit">','<div class="form-element line-colors">',"<label>"+a.lineColor+"</label>","$[[yamaps#ColorPicker]]","</div>",'<div class="form-element line-width">',"$[[yamaps#StrokeWidthLayout]]","</div>",'<div class="form-element line-opacity">',"$[[yamaps#OpacityLayout]]","</div>",'<div class="form-element">','<label for="balloonContent">'+a.baloonText+"</label>",'<input type="text" id="balloonContent" value="$[properties.balloonContent]"/>',"</div>","$[[yamaps#ActionsButtons]]","</div>"].join(""),{build:function(){this.constructor.superclass.build.call(this),this.properties=this.getData().properties.getAll();var t=$(this.getParentElement()),o=this;this.$lineColors=t.find(".line-colors .yamaps-color"),this.$lineColors.each(function(){var t=$(this),e=t.children("div");o.properties.strokeColor==e.attr("data-content")&&t.addClass("yamaps-color-active")}),this.$lineColors.bind("click",this,this.strokeColorClick),this.$opacity=t.find(".line-opacity select"),this.$opacity.val(o.properties.opacity),this.$width=t.find(".line-width select"),this.$width.val(o.properties.strokeWidth),this.$balloonContent=t.find("#balloonContent"),$("#deleteButton").bind("click",this,this.onDeleteClick),$("#saveButton").bind("click",this,this.onSaveClick)},clear:function(){this.constructor.superclass.build.call(this),this.$lineColors.unbind("click",this,this.strokeColorClick),$("#deleteButton").unbind("click",this,this.onDeleteClick),$("#saveButton").unbind("click",this,this.onSaveClick)},strokeColorClick:function(t){t.data.properties.strokeColor=$(this).children("div").attr("data-content")},onDeleteClick:function(t){t.data.properties.element.remove(),t.preventDefault()},onSaveClick:function(t){var o=t.data.properties.element;t.data.properties.opacity=t.data.$opacity.val(),o.setOpacity(t.data.properties.opacity),t.data.properties.strokeWidth=t.data.$width.val(),o.setWidth(t.data.properties.strokeWidth),o.setColor(t.data.properties.strokeColor),o.setContent(t.data.$balloonContent.val()),o.closeBalloon()}})),this.addMapTools(function(t){var e={balloonMaxWidth:300,balloonCloseButton:!0,strokeWidth:3,elements:{}};t.options.edit&&(e.balloonContentLayout="yamaps#LineBalloonEditLayout",e.draggable=!0);var i=new o.YamapsLineCollection(e);t.map.geoObjects.add(i.elements);for(var n in t.options.lines){var s=i.createLine(t.options.lines[n].coords,t.options.lines[n].params);t.options.edit&&s.startEditing()}if(t.options.edit){var l=function(t){var o=i.createLine([t.get("coordPosition")],{balloonContent:"",strokeColor:"blue",opacity:.8,strokeWidth:3});o.startEditing(!0)},r=new ymaps.control.Button({data:{content:'<ymaps class="ymaps-b-form-button__text"><ymaps class="ymaps-b-ico ymaps-b-ico_type_line"></ymaps></ymaps>',title:a.drawingLines}});return r.events.add("select",function(o){t.cursor=t.map.cursors.push("pointer"),t.mapListeners.add("click",l)}).add("deselect",function(o){t.cursor.remove(),t.mapListeners.remove("click",l)}),r}}),this.YamapsPolygon=function(t,o,e){this._init(new ymaps.Polygon(t,o,e))},this.YamapsPolygon.prototype=this.BaseYamapsObject,this.YamapsPolygonCollection=function(t){this._init(t),this.storagePrefix="yandex-map-polygons",this.createPolygon=function(t,e,a){return this.add(new o.YamapsPolygon(t,e,a))}},this.YamapsPolygonCollection.prototype=this.BaseYamapsObjectCollection,this.addLayout("yamaps#PolygonBalloonEditLayout",ymaps.templateLayoutFactory.createClass(['<div class="yamaps-balloon yamaps-polygon-edit">','<div class="form-element line-colors">',"<label>"+a.lineColor+"</label>","$[[yamaps#ColorPicker]]","</div>",'<div class="form-element poly-colors">',"<label>"+a.polygonColor+"</label>","$[[yamaps#ColorPicker]]","</div>",'<div class="form-element line-width">',"$[[yamaps#StrokeWidthLayout]]","</div>",'<div class="form-element poly-opacity">',"$[[yamaps#OpacityLayout]]","</div>",'<div class="form-element">','<label for="balloonContent">'+a.baloonText+"</label>",'<input type="text" id="balloonContent" value="$[properties.balloonContent]"/>',"</div>","$[[yamaps#ActionsButtons]]","</div>"].join(""),{build:function(){this.constructor.superclass.build.call(this),this.properties=this.getData().properties.getAll();var t=$(this.getParentElement()),o=this;this.$polyColors=t.find(".poly-colors .yamaps-color"),this.$polyColors.each(function(){var t=$(this),e=t.children("div");o.properties.fillColor==e.attr("data-content")&&t.addClass("yamaps-color-active")}),this.$polyColors.bind("click",this,this.fillColorClick),this.$lineColors=t.find(".line-colors .yamaps-color"),this.$lineColors.each(function(){var t=$(this),e=t.children("div");o.properties.strokeColor==e.attr("data-content")&&t.addClass("yamaps-color-active")}),this.$lineColors.bind("click",this,this.strokeColorClick),this.$opacity=t.find(".poly-opacity select"),this.$opacity.val(o.properties.opacity),this.$width=t.find(".line-width select"),this.$width.val(o.properties.strokeWidth),this.$balloonContent=t.find("#balloonContent"),$("#deleteButton").bind("click",this,this.onDeleteClick),$("#saveButton").bind("click",this,this.onSaveClick)},clear:function(){this.constructor.superclass.build.call(this),this.$polyColors.unbind("click",this,this.fillColorClick),this.$lineColors.unbind("click",this,this.strokeColorClick),$("#deleteButton").unbind("click",this,this.onDeleteClick),$("#saveButton").unbind("click",this,this.onSaveClick)},fillColorClick:function(t){t.data.properties.fillColor=$(this).children("div").attr("data-content")},strokeColorClick:function(t){t.data.properties.strokeColor=$(this).children("div").attr("data-content")},onDeleteClick:function(t){t.data.properties.element.remove(),t.preventDefault()},onSaveClick:function(t){var o=t.data.properties.element;t.data.properties.opacity=t.data.$opacity.val(),o.setOpacity(t.data.properties.opacity),t.data.properties.strokeWidth=t.data.$width.val(),o.setWidth(t.data.properties.strokeWidth),o.setColor(t.data.properties.strokeColor,t.data.properties.fillColor),o.setContent(t.data.$balloonContent.val()),o.closeBalloon()}})),this.addMapTools(function(t){var e={balloonMaxWidth:300,balloonCloseButton:!0,strokeWidth:3,elements:{}};t.options.edit&&(e.balloonContentBodyLayout="yamaps#PolygonBalloonEditLayout",e.draggable=!0);var i=new o.YamapsPolygonCollection(e);t.map.geoObjects.add(i.elements);for(var n in t.options.polygons){var s=i.createPolygon(t.options.polygons[n].coords,t.options.polygons[n].params);t.options.edit&&s.startEditing()}if(t.options.edit){var l=function(t){var o=i.createPolygon([[t.get("coordPosition")]],{balloonContent:"",fillColor:"lightblue",strokeColor:"blue",opacity:.6,strokeWidth:3});o.startEditing(!0)},r=new ymaps.control.Button({data:{content:'<ymaps class="ymaps-b-form-button__text"><ymaps class="ymaps-b-ico ymaps-b-ico_type_poly"></ymaps></ymaps>',title:a.drawingPolygons}});return r.events.add("select",function(o){t.cursor=t.map.cursors.push("pointer"),t.mapListeners.add("click",l)}).add("deselect",function(o){t.cursor.remove(),t.mapListeners.remove("click",l)}),r}}),this.addMapTools(function(t){var o=null,e=null,i=function(o,e){var a=(t.map.container.getElement().parentElement.id,$("input[name=yandex-map-routes]"));o&&e?a.val(JSON.stringify([o,e])):a.val("")},n=function(s,l,r){ymaps.route([s,l],{mapStateAutoApply:!1}).then(function(a){r&&t.map.geoObjects.remove(r),t.map.geoObjects.add(a);var c=a.getWayPoints(),p=c.get(0),d=c.get(1);p.options.set("preset","twirl#carIcon"),d.options.set("preset","twirl#houseIcon"),t.options.edit&&(i(s,l),c.options.set("draggable",!0),c.events.add("dragend",function(){n(this.start.geometry.getCoordinates(),this.end.geometry.getCoordinates(),a)},{start:p,end:d}),c.events.add("click",function(){t.map.geoObjects.remove(this),o=e=null,i(null,null)},a))},function(t){r||(o=e=null),alert(a.errorFound+": "+t.message)})};if(t.options.routes&&(o=t.options.routes[0],e=t.options.routes[1],n(o,e)),t.options.edit){var s=function(i){if(o)if(e)alert(a.routeError);else{var s=o.geometry.getCoordinates();t.map.geoObjects.remove(o),e=i.get("coordPosition"),n(s,e,null)}else o=new ymaps.Placemark(i.get("coordPosition"),{},{balloonCloseButton:!0,preset:"twirl#carIcon"}),t.map.geoObjects.add(o)},l=new ymaps.control.Button({data:{content:'<ymaps class="ymaps-b-form-button__text"><ymaps class="ymaps-b-ico ymaps-b-ico_type_route"></ymaps></ymaps>',title:a.layingRoutes}});return l.events.add("select",function(o){t.cursor=t.map.cursors.push("pointer"),t.mapListeners.add("click",s)}).add("deselect",function(o){t.cursor.remove(),t.mapListeners.remove("click",s)}),l}}),this.Map=function(t,e,a){this.map=new ymaps.Map(e,a.init),this.mapId=e,this.options=a,this.mapListeners=this.map.events.group(),this.exportCoords=function(t){var o={center:t.get("newCenter"),zoom:t.get("newZoom")},e=$("input[name=yandex-map-coords]");e.val(JSON.stringify(o))},this.exportType=function(t){var o=t.get("newType"),e=$("input[name=yandex-map-type]");e.val(o)},this.map.events.add("boundschange",this.exportCoords,this.map).add("typechange",this.exportType,this.map);var i=[];this.enableControls=function(){i.push("typeSelector");var o=this.map.container.getSize();o[1]<270?this.map.controls.add("smallZoomControl",{right:5,top:50}):this.map.controls.add("zoomControl",{right:5,top:50}),t._mapTools.unshift("default")},this.enableTraffic=function(){var t=new ymaps.control.TrafficControl({providerKey:"traffic#actual",shown:!0});t.getProvider().state.set("infoLayerShown",!0),t.state.set("expanded",!1),i.unshift(t)},this.enableTools=function(){var t=o.getMapTools(this);if(this.map.controls.add(new ymaps.control.MapTools(t),{left:5,top:5}),i.length>0){var e=new ymaps.control.Group({items:i});this.map.controls.add(e,{right:5,top:5})}}},this.showMap=function(t){if(!e.init.center||!e.init.zoom){var o=ymaps.geolocation;e.init.center||(e.init.center=[o.latitude,o.longitude]),e.init.zoom||(e.init.zoom=o.zoom?o.zoom:10)}var a=new this.Map(this,t,e);this.maps[t]=a,e.controls&&a.enableControls(),e.traffic&&a.enableTraffic(),a.enableTools()}};